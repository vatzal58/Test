import React, { useEffect, useState } from 'react';
import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';
import { Model, KaldiRecognizer } from 'vosk';

const SpeechToText = () => {
  const [model, setModel] = useState(null);
  const [recognizer, setRecognizer] = useState(null);
  const [transcript, setTranscript] = useState('');
  const { listening, resetTranscript } = useSpeechRecognition();

  useEffect(() => {
    const loadModel = async () => {
      const modelPath = './models/vosk-model-small-en-us-0.15';
      const model = new Model(modelPath);
      setModel(model);
      const recognizer = new KaldiRecognizer(model, 16000);
      setRecognizer(recognizer);
    };

    loadModel();
  }, []);

  const startListening = () => {
    SpeechRecognition.startListening({ continuous: true });
    if (recognizer) {
      recognizer.on('result', (msg) => {
        const result = JSON.parse(msg.result);
        setTranscript(result.text);
      });
    }
  };

  const stopListening = () => {
    SpeechRecognition.stopListening();
  };

  return (
    <div>
      <button onClick={startListening} disabled={listening}>
        Start Listening
      </button>
      <button onClick={stopListening} disabled={!listening}>
        Stop Listening
      </button>
      <button onClick={resetTranscript}>Reset</button>
      <p>{transcript}</p>
    </div>
  );
};

export default SpeechToText;
